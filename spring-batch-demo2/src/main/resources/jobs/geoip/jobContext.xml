<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/batch"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:beans="http://www.springframework.org/schema/beans"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
          http://www.springframework.org/schema/batch http://www.springframework.org/schema/batch/spring-batch-2.1.xsd">

    <job id="geoIPJob">

        <step id="geoIPJob_readAndWriteCountries">
            <tasklet>
                <chunk reader="ipGeolocationReader" processor="compositeIPGeolocationToCountryProcessor" writer="countryWriter" commit-interval="50">
                    <skip-policy>
                        <beans:ref bean="skipPolicy" />
                    </skip-policy>
                </chunk>
            </tasklet>
            <next on="COMPLETED" to="geoIPJob_readAndWriteIPGeolocations" />
            <fail on="FAILED" />
        </step>

        <step id="geoIPJob_readAndWriteIPGeolocations">
            <tasklet>
                <chunk reader="ipGeolocationReader" writer="ipGeolocationWriter" commit-interval="100">
                    <skip-policy>
                        <beans:ref bean="skipPolicy" />
                    </skip-policy>
                </chunk>
            </tasklet>
            <end on="COMPLETED" />
            <fail on="FAILED" />
        </step>

    </job>

    <beans:bean id="ipGeolocationReader" class="org.springframework.batch.item.file.MultiResourceItemReader" scope="step">
        <beans:property name="resources" value="#{jobParameters[geoIpFileSpec]}" />
        <beans:property name="delegate" ref="ipGeolocationReaderDelegate" />
    </beans:bean>

    <beans:bean id="ipGeolocationReaderDelegate" class="org.springframework.batch.item.file.FlatFileItemReader">
        <beans:property name="encoding" value="UTF-8" />
        <beans:property name="lineMapper">
            <beans:bean class="org.springframework.batch.item.file.mapping.DefaultLineMapper">
                <beans:property name="lineTokenizer">
                    <beans:bean class="org.springframework.batch.item.file.transform.DelimitedLineTokenizer">
                        <beans:property name="delimiter" value="," />
                    </beans:bean>
                </beans:property>
                <beans:property name="fieldSetMapper">
                    <beans:bean class="jobs.geoip.IPGeolocationFieldSetMapper" />
                </beans:property>
            </beans:bean>
        </beans:property>
    </beans:bean>

    <beans:bean id="compositeIPGeolocationToCountryProcessor" class="org.springframework.batch.item.support.CompositeItemProcessor">
        <beans:property name="delegates">
            <beans:list>
                <beans:bean id="extractCountryProcessor" class="jobs.geoip.ExtractCountryProcessor" />
                <beans:bean id="skipDuplicateCountriesProcessor" class="jobs.geoip.SkipDuplicateCountriesProcessor" scope="step" />
            </beans:list>
        </beans:property>
    </beans:bean>
    <beans:bean id="countryWriter" class="org.springframework.batch.item.database.JdbcBatchItemWriter">
        <beans:property name="dataSource" ref="dataSource" />
        <beans:property name="sql" value="insert into countries (code, name) values (?, ?)" />
        <beans:property name="itemPreparedStatementSetter">
            <beans:bean class="jobs.geoip.CountryPreparedStatementSetter" />
        </beans:property>
    </beans:bean>

    <beans:bean id="ipGeolocationWriter" class="org.springframework.batch.item.database.JdbcBatchItemWriter">
        <beans:property name="dataSource" ref="dataSource" />
        <beans:property name="sql" value="insert into ip_geolocations (address_start, address_end, country_code) values (?, ?, ?)" />
        <beans:property name="itemPreparedStatementSetter">
            <beans:bean class="jobs.geoip.IPGeolocationPreparedStatementSetter" />
        </beans:property>
    </beans:bean>

    <beans:bean id="skipPolicy" class="jobs.geoip.IgnoreDuplicateRowsSkipPolicy" />

</beans:beans>